if (class(x)!="matrix")stop()
v=rep(0,ncol(x))
for(i in 1: ncol(x)){
v[i] = mean(x[i,])
}
return(v)
}
v
v(x)
s_colMean(x)
x=matrix(1:10,nrow=2,ncol=5)
s_colMean=function(x)
{
if (class(x)!="matrix")stop()
v=rep(0,ncol(x))
for(i in 1: ncol(x)){
v[i] = mean(x[i,])
}
return(v)
}
s_colMean(x)
x=matrix(1:16,4,4)
s_colMean=function(x)
{
if (class(x)!="matrix")stop()
v=rep(0,ncol(x))
for(i in 1: ncol(x)){
v[i] = mean(x[,i])
}
return(v)
}
s_colMean(x)
x=matrix(1:10,nrow=2,ncol=5)
s_colMean=function(x)
{
if (class(x)!="matrix")stop()
v=rep(0,ncol(x))
for(i in 1: ncol(x)){
v[i] = mean(x[,i])
}
return(v)
}
s_colMean(x)
x=matrix(1:20,4,5)
row_wise=function(x){
v=rep(0,nrow(x))
if(class(x)!="matrix")stop()
for(i in 1:nrow(x)){
v[i]= mean(x[i,])
}
}
row_wise(A)
row_wise(A)
row_wise(x)
x=matrix(1:20,4,5)
row_wise(x)
row_wise=function(x){
v=rep(0,nrow(x))
if(class(x)!="matrix")stop()
for(i in 1:nrow(x)){
v[i]= mean(x[i,])
}
}
row_wise(x)
A=matrix(1:20,4,5)
row_wise(A)
row_wise=function(x){
v=rep(0,nrow(x))
if(class(x)!="matrix")stop()
for(i in 1:nrow(x)){
v[i]= mean(x[i,])
print(v)
}
}
row_wise(A)
B=matrix(1:12,3,4)
B
row_wise(B)
row_wise=function(x){
if(class(x)!="matrix")stop()
v=rep(0,nrow(x))
for(i in 1:nrow(x)){
v[i]= mean(x[i,])
print(v)
}
}
row_wise(A)
return(v)
row_wise=function(x){
if(class(x)!="matrix")stop()
v=rep(0,nrow(x))
for(i in 1:nrow(x)){
v[i]= mean(x[i,])
return(v)
}
}
row_wise(A)
row_wise=function(x){
if(class(x)!="matrix")stop()
v=rep(0,nrow(x))
for(i in 1:nrow(x)){
v[i]= mean(x[i,])
print(v)
}
}
row_wise(A)
row_wise=function(x){
if(class(x)!="matrix")stop()
v=rep(0,nrow(x))
for(i in 1:nrow(x)){
v[i]= mean(x[i,])
return(v)
}
}
row_wise(A)
?stop
k=0
for(i in 1:5){
if (i>3) break
for(j in 1:3){
k=k-i+j
}
}
k
k=0
for(i in 1:5){
if (i>2) break
for(j in 1:3){
k=k-i+j
}
}
kk
for(i in 1:5){
if (i>2) break
for(j in 1:3){
k=k-i+j
}
}kk
k
k=0
for(i in 1:5){
if (i>2) break
for(j in 2:3){
k=k-i+j
}
}
k
A
row_wise(A)
A=matrix(1:20,4,5)
row_wise=function(x){
if(class(x)!="matrix")stop()
v=rep(0,nrow(x))
for(i in 1:nrow(x)){
v[i]= mean(x[i,])}
return(v)
}
row_wise(A)
B=matrix(1:12,3,4)
B
row_wise(B)
row_wise=function(x){
if(class(x)!="matrix")stop()
v=rep(0,nrow(x))
for(i in 1:nrow(x)){
v[i]= mean(x[i,])}
return(v)
}
A=matrix(1:20,4,5)
A
row_wise(A)
return(k)
k=0
for(i in 1:5){
if (i>2) break
for(j in 2:3){
k=k-i+j
}
return(k)
}
k
k=0
for(i in 1:5){
if (i>2) break
for(j in 2:3){
k=k-i+j
}
print(k)
}
?return
k=0
for(i in 1:3){
if (i>2) break
for(j in 2:3){
k=k-i+j
}
}
k
for(i in 1:3){
if (i>1) break
for(j in 2:3){
k=k-i+j
}
}
k
k=0
for(i in 1:3){
if (i>1) break
for(j in 2:3){
k=k-i+j
}
}
k
k=10
for(i in 2:3){
if (i>3) break
for(j in 1:2){
k=k*i+j
}
}
k
if (i>2) break
k=10
for(i in 2:3){
for(j in 1:2){
k=k*i+j
if (i>2) break
}
}
k
k=10
for(i in 2:3){
for(j in 1:2){
if (i>2) break
k=k*i+j
}
}
k
k=0
for(i in 1:5){
for(j in 1:3){
if (i>3) break
k=k-i+j
}
}
k
k=10
for(i in 2:3){
if (i>3) break
for(j in 1:2){
k=k*i+j
}
}
k
for(i in 2:3){
for(j in 1:2){
if (i>3) break
k=k*i+j
}
}
k
k=10
for(i in 2:3){
for(j in 1:2){
if (i>3) break
k=k*i+j
}
}
k=10
for(i in 2:3){
for(j in 1:2){
if (i>3) break
k=k*i+j
}
}
k
if (i>3) stop
k=10
for(i in 2:3){
for(j in 1:2){
if (i>3) stop
k=k*i+j
}
}
kk
k
if (i>2) stop
k=10
for(i in 2:3){
for(j in 1:2){
if (i>2) stop
k=k*i+j
}
}
k
k=10
for(i in 2:3){
for(j in 1:2){
k=k*i+j
}
}
k
k=10
for(i in 2:3){
for(j in 1:2){
if (i>1) stop
k=k*i+j
}
}
k
k=10
for(i in 2:3){
if (i>2) stop
for(j in 1:2){
k=k*i+j
}
}
k
k=10
for(i in 2:3){
if (i>1) stop
for(j in 1:2){
k=k*i+j
}
}
k
k=10
for(i in 2:3){
if (i>1)stop
for(j in 1:2){
k=k*i+j
}
}
k
k=10
for(i in 2:3){
for(j in 1:2){
k=k*i+j
if (i>1)stop
}
}
k
k=10
for(i in 2:3){
for(j in 1:2){
k=k*i+j
if (i>3)stop
}
}
k
k=10
for(i in 2:3){
for(j in 1:2){
k=k*i+j
if (i>3) stop
}
}
k
k=10
for(i in 2:3){
for(j in 1:2){
k=k*i+j
if (i>2) stop
}
}
k
k=10
for(i in 2:3){
for(j in 1:2){
k=k*i+j
if (i>2) stop()
}
}
k
k=10
for(i in 2:3){
for(j in 1:2){
k=k*i+j
if (i>3) stop()
}
}
k
k=10
for(i in 2:3){
for(j in 1:2){
k=k*i+j
if (i>1) stop()
}
}
k
k=10
for(i in 2:3){
for(j in 1:2){
if (i>1) stop()
k=k*i+j
}
}
k
k=10
for(i in 2:3){
for(j in 1:2){
if (i>1) break
k=k*i+j
}
}
k
k=10
for(i in 2:3){
for(j in 1:2){
k=k*i+j
if (i>1) break
}
}
k
k=10
for(i in 2){
for(j in 1:2){
k=k*i+j
if (i>1) break
}
}
k
k=10
for(i in 2:3){
for(j in 1:2){
k=k*i+j
if (i>1) break
}
}
k
k=10
for(i in 2:3){
for(j in 1:2){
k=k*i+j
if (i>1) break
}print(k)
}
k=10
for(i in 2:3){
for(j in 1:2){
k=k*i+j
if (i>1) break
print(k) }
}
print(k)
?write.table
?cat
cat("a")
cat("a a/n a")
cat("a a\n a")
a= matrix(10,5,5)
write.table(a, "./Rmatrix.dat", sep=" ")
getwd()
write.table(a, "./Rmatrix.txt", sep=" ")
write.table(a, "./Rmatrix1.txt", sep="*")
install.packages("xlsx")
install.packages("xlsx")
install.packages("xlsx")
getwd()
setwd()
setwd("C:/Users/dgr00/OneDrive/문서")
install.packages("xlsx")
install.packages("xlsx")
attach(mtcars)
hean(mtcars, n=2)
head(mtcars, n=2)
plot(mpg~disp,data=mtcars)
plot(hp~disp,data=mtcars)
x=rnorm(100)
y=2+2*x+rnorm(100)
plot(x,y,main="plot(x-y)")
plot(x,y,type='p',main="plot(x-y)")
plot(x,y,type='l',main="plot(x-y)")
plot(x,y,type='s',main="plot(x-y)")
plot(x,y,type='b',main="plot(x-y)")
x=matrix(4,2,2)
x <- c(3,1,4,1)
match(x ,c(2,1,4))
j <- vector(mode = 'list', length = 7)
j
j$[[1]]<-c(TRUE, FALSE)
j[[1]]<-c(TRUE, FALSE)
j
j[[2]]<-diag(x=1,2)
j
j[[3]]<-seq(0:1,length=100, by=2)
j[[3]]<-seq(from 1 to 0,length=100, by=2)
j[[3]]<-seq(from 0 to 1,length=100, by=2)
j[[3]]<-seq(from 0, to 1,length=100, by=2)
j[[3]]<-seq( 1,length=100, by=2)
j
j[[3]]<-seq(0:1,length=100, by=2)
j[[3]]<-seq(0:1,length=100,)
j[[3]]<-seq(0:1,length=100)
j[[3]]<-seq(from 0 to1,length=100)
j[[3]]<-seq(from 0 to 1,length=100)
j[[3]]<-seq(from 0, to 1,length=100)
j[[3]]<-seq(from= 0, to= 1,length=100)
j
for(i in 4: 7){
j[[i]]<- i-3
}
j
getwd()
setwd()
setwd("C:\\Users\\dgr00\\OneDrive\\문서\\GitHub\\R-Object")
save("7.Rdat")
save(7.Rdat)
save.image(file=7.Rdat)
save.image(file=7.Rdata)
save.image(file = "7.Rdata")
save.image(file = "7")
